<template>
	<div class="body">
		<yd-min-navbar navbar="{{navbar}}"></yd-min-navbar>
		<scroller>
			<div class="des-wrapper">
				<div class="hot-wrapper" if="{{ hotList.length > 0 }}" id="scroller">
					<div class="hot-list" repeat="item in hotList" id="item-{{ $index }}">
						<div class="delete" onclick="delItem" index="{{ $index }}">
							<text class="del-text">删除</text>
						</div>
						<div id="content-{{ $index }}" class="content" onpanstart="itemStart" onpanmove="itemMove" onpanend="itemEnd" id="test-box">
							<div class="hot-img">
								<image src="{{ item.member_headimg }}" style="width:166;height:166;"></image>
							</div>
							<div class="hot-detail">
								<div class="hot-title">
									<text style="font-size:28;color:#333;flex:1;">{{ item.member_name }}</text>
									<text style="color:#ebac51;font-size:26;align-items: flex-end;">{{ item.designer_follow }}人气</text>
								</div>
								<div class="hot-style" repeat="sitem in item.design_style">
									<text class="hot-common">{{ sitem }}</text>
								</div>
								<text class="hot-common" style="lines:2;">{{ item.design_intro }}</text>
							</div>
						</div>
					</div>
				</div>
			</div>
		</scroller>	
	</div>

</template>

<style>
	.body{
		width:750;
		background-color: #f1f1f1;
	}
	.des-wrapper{
		width:750;
	}
	.des-style{
		width:750;
		height:80;
		background-color: #fff;
		border-bottom-color:#dfdfdf;
		border-bottom-width:1;
		justify-content: center;
		align-items: center;
		flex-direction: row;
	}
	.style{
		color:#333;
		font-size:26;
	}
	.hot-wrapper{
		width:750;
		padding-top:25;
		padding-bottom:25;
	}
	.hot-list{
		width:750;
		height:200;
		border-color:#dfdfdf;
		border-width:1;
		background-color: #fff;
		flex-direction: row;
		margin-bottom:25;
		position: relative;
		justify-content: flex-end;
	}
	.hot-img{
		margin-right:23;
		height:166;
		width:166;
	}
	.hot-common{
		color:#989898;
		font-size:28;
	}
	.hot-title{
		flex-direction: row;
	}
	.hot-detail{
		width:465;
	}
	.hot-style{
		margin-top:10;
		margin-bottom:10;
	}
	.delete{
		width: 100;
		height: 200;
		background-color: #e64340;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
	.del-text{
		color: #fff;
		font-size: 30;
	}
	.content{
		width: 750;
		height: 200;
		flex-direction: row;
		padding-left: 30;
		padding-right: 30;
		position: absolute;
		left: 0;
		top: 0;
		background-color: #fff;
		padding-top:18;
		padding-bottom:18;
	}
</style>

<script>
	require('weex-components'); 
	var animation = require('@weex-module/animation');	
	require('../components/yd-min-navbar.we');
	var dom = require('@weex-module/dom');
	var api = require('../api.js');
	module.exports = {
		data:{
			resurl: api.apiurl.resurl,
	      	navbar:{
		        centerTitle: '关注设计师',
		        rightTitle: '',
		        rightImage: '',
		        rightColor: '#323333',
		        centerColor: '#323333',
		        backgroundColor: "#eadbc7"
	      	},
	      	initPageX: 0,
			endPageX: 0,
			moveLeft: 0,
			initPageY: 0,
			hotList:[]
		},
		created: function(){
			this.$on('navBar.leftItem.click',function(e){
				var navigator = require('@weex-module/navigator');
				var params = {animated:'true'};
				navigator.pop(params, function(){});
			})
		},
		methods:{
			itemStart:function(eventProperties){
				var self = this;
				this.initPageX = 0;
				this.initPageX = eventProperties.changedTouches[0].pageX;
				for( var i = 0 ; i < self.hotList.length ; i++ ){
					var el = this.$el('content-' + i );
					animation.transition(el, {
			          	styles: {
			            	transform: 'translate(0px, 0)'
			          	},
			          	duration: 100,
			          	timingFunction: 'ease-in-out',
			          	'transform-origin': 'center center',
			          	delay: 0 
			        },function(){
			        	
			        });
				}
			},
			itemMove:function(eventProperties){
				var self = this;
				var obj = eventProperties.target;
				var left = eventProperties.changedTouches[0].pageX - self.initPageX;
				self.moveLeft = left;
				if( left < 0 ){
					if( -left >= 100 ){
						left = -100;
					}
					animation.transition(obj, {
			          	styles: {
			            	transform: 'translate(' + left + 'px, 0)'
			          	},
			          	duration: 1,
			          	timingFunction: 'ease-in-out',
			          	'transform-origin': 'center center',
			          	delay: 0 
			        },function(){
			        	
			        });
				}else if( left > 0 ){
					if( left >= 0 ){
						left = 0;
					}
					animation.transition(obj, {
			          	styles: {
			            	transform: 'translate(' + left + 'px, 0)'
			          	},
			          	duration: 1,
			          	timingFunction: 'ease-in-out',
			          	'transform-origin': 'center center',
			          	delay: 0 
			        },function(){
			        	
			        });
				}
			},
			itemEnd:function(eventProperties){
				var self = this;
				var obj = eventProperties.target;
				var left = eventProperties.changedTouches[0].pageX - self.initPageX;
				if( self.moveLeft > - 99 ){
					animation.transition(obj, {
			          	styles: {
			            	transform: 'translate(0px, 0)'
			          	},
			          	duration: 100,
			          	timingFunction: 'ease-in-out',
			          	'transform-origin': 'center center',
			          	delay: 0 
			        },function(){
			        	
			        });
				}
			},
			delItem:function(e){
				var self = this ;
				var obj = self.$el('item-' + e.target.attr.index );
				self.hotList.splice( e.target.attr.index , 1 );
				for( var i = 0 ; i < self.hotList.length ; i++ ){
					var el = self.$el('content-' + i );
					animation.transition(el, {
			          	styles: {
			            	transform: 'translate(0px, 0)'
			          	},
			          	duration: 100,
			          	timingFunction: 'ease-in-out',
			          	'transform-origin': 'center center',
			          	delay: 0 
			        },function(){
			        	
			        });
				};
				var id = e.target.attr.val;
				var stream = require('@weex-module/stream');
				var modal = require('@weex-module/modal');
				stream.fetch({
					method:'POST',
					url:api.apiurl.apiurl + 'api/del/member/follow',
					type: 'json',
					body:`id=1`
				},function(data){
					console.log(data);
				},function(e){
					
				});
			},
		},
		init:function(){
			var self = this;
//			var mid = e.target.attr.val;
			var stream = require('@weex-module/stream');
			var modal = require('@weex-module/modal');
			stream.fetch({
				method:'POST',
				url:api.apiurl.apiurl + 'api/get/member/follow',
				type: 'json',
				body:`mid=7`
			},function(data){
				self.hotList=data.data.data.data;
				console.log(data.data.data.data)
			},function(e){
				
			})
		}
	}
</script>